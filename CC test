-- Define the coordinates of the monitor on top of the computer
local monitorX, monitorY, monitorZ = 0, 1, 0 -- Adjust these coordinates according to your setup

-- Get the list of connected monitors
local monitors = peripheral.find("monitor")

-- Search for the monitor on top of the computer
local monitor = nil
for _, m in ipairs(monitors) do
    local xPos, yPos, zPos = m.getPosition()
    if xPos == monitorX and yPos == monitorY and zPos == monitorZ then
        monitor = m
        break
    end
end

if not monitor then
    print("No monitor found on top of the computer.")
    return
end

-- Clear the monitor and set text scale
monitor.clear()
monitor.setTextScale(0.5)

-- Setting the code and creating the input
function checkcode()
    monitor.setCursorPos(4, 5)
    monitor.write("Enter Code: ")
    monitor.setCursorPos(7, 6)    
    local input = read()

    -- Confirming if the code is right
    if input == "4548" then
        monitor.clear()
        monitor.setCursorPos(4, 5)
        monitor.write("Unlocking!")
        -- Outputting redstone signal
        redstone.setOutput("right", true)
        sleep(3)
        redstone.setOutput("right", false)
    else
        monitor.clear()
        monitor.setCursorPos(3, 5)
        monitor.write("Invalid Code")
        sleep(3)
    end
end

-- Clearing and looping
while true do 
    checkcode()
    monitor.clear()
    monitor.setCursorPos(3, 5)
    monitor.write("Restarting..")
    sleep(2)
end
